{"version":3,"file":"returnable.js","sourceRoot":"","sources":["../../src/mixins/returnable.js"],"names":[],"mappings":";;;;;;AACE,AAAI,UAAE,AAAY;AAElB,AAAI;AAAE,AAAG,AAAE,AAAC;AACV,AAAa,2BAAE,AAAI,AACpB,AAAC;AAFW;;AAIb,AAAK;AACH,AAAW,qBAAE,AAAI,AAClB;AAFM;AAIP,AAAK;AACH,AAAQ,oCAAE,AAAG;AACX,gBAAI,AAAG,KAAE;AACP,AAAI,qBAAC,AAAa,gBAAG,AAAI,KAAC,AAAW;AACtC,mBAAM;AACL,AAAI,qBAAC,AAAK,MAAC,AAAoB,sBAAE,AAAI,KAAC,AAAa,AAAC;AACrD,AACH;AAAC,AACF;AARM;AAUP,AAAO;AACL,AAAI,4BAAE,AAAK;AACT,AAAI,iBAAC,AAAa,gBAAG,AAAK;AAC1B,AAAI,iBAAC,AAAQ,WAAG,AAAK,AACvB;AAAC,AACF,AACF;AANU;AArBI","sourcesContent":["export default {\n  name: 'returnable',\n\n  data: () => ({\n    originalValue: null\n  }),\n\n  props: {\n    returnValue: null\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:returnValue', this.originalValue)\n      }\n    }\n  },\n\n  methods: {\n    save (value) {\n      this.originalValue = value\n      this.isActive = false\n    }\n  }\n}\n"]}