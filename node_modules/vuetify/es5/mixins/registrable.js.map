{"version":3,"file":"registrable.js","sourceRoot":"","sources":["../../src/mixins/registrable.ts"],"names":[],"mappings":";;;;;;;;AAAA,AAAO,AAAG,AAAM,AAAK;;;;AAErB,AAAO,AAAE,AAAW,AAAE,AAAM,AAAiB;;;;;;AAE7C,yBAA0B,AAAa,OAAE,AAAc;AACrD;AAAO,AAAG,AAAE,eAAC,AAAW,AAAC,mCAAO,AAAK,8CAAoC,AAAM,AAAE,AAAC,AACpF;;AAAC,AASD,AAAM;gBAAoC,AAAY,WAAE,AAAc,OAAE,AAAe;AACrF,QAAM,AAAW,uBAAY,AAAM,AAAC,AAAC;AACnC,AAAQ,kBAAE,AAAe,gBAAC,AAAK,OAAE,AAAM,AAAC;AACxC,AAAU,oBAAE,AAAe,gBAAC,AAAK,OAAE,AAAM,AAAC,AAC3C,AAAC,AAAC;AAHmC,KAAlB,AAAK,GAGrB,AAAI;AAER,yBAAW,AAAM;AACf,AAAI,cAAE,AAAoB;AAE1B,AAAM,AAAE,AACN,oCAAC,AAAS,AAAC;AACT,AAAO,qBAAE,AAAW,AACrB,AACF,AACF,AAAC,AACJ;AALmB;AAJC,KAAX,AAAG;AASX,AAED,AAAM;iBAAmB,AAAiB;AACxC,yBAAW,AAAM;AACf,AAAI,cAAE,AAAqB;AAE3B,AAAO;AACL,AAAQ,sBAAE,AAAI;AACd,AAAU,wBAAE,AAAI,AACjB;AAHQ;AAIT,AAAO;AACL,AAAO,AACL,uCAAC,AAAS,AAAC;AACT,AAAQ,0BAAE,AAAI,KAAC,AAAQ;AACvB,AAAU,4BAAE,AAAI,KAAC,AAAU,AAC5B,AACF,AACH;AALiB;AAKhB,AACF,AAAC,AACJ;AAhBoB,KAAX,AAAG;AAgBX","sourcesContent":["import Vue from 'vue'\nimport { ExtendedVue } from 'vue/types/vue'\nimport { consoleWarn } from '../util/console'\n\nfunction generateWarning (child: string, parent: string) {\n  return () => consoleWarn(`The ${child} component must be used inside a ${parent}`)\n}\n\ntype Registrable<T extends string> = ExtendedVue<Vue, {\n  [K in T]: {\n    register (...props: any[]): void\n    unregister (self: any): void\n  }\n}, {}, {}, {}>\n\nexport function inject<T extends string> (namespace: T, child?: string, parent?: string): Registrable<T> {\n  const defaultImpl = child && parent ? {\n    register: generateWarning(child, parent),\n    unregister: generateWarning(child, parent)\n  } : null\n\n  return Vue.extend({\n    name: 'registrable-inject',\n\n    inject: {\n      [namespace]: {\n        default: defaultImpl\n      }\n    }\n  })\n}\n\nexport function provide (namespace: string) {\n  return Vue.extend({\n    name: 'registrable-provide',\n\n    methods: {\n      register: null,\n      unregister: null\n    },\n    provide () {\n      return {\n        [namespace]: {\n          register: this.register,\n          unregister: this.unregister\n        }\n      }\n    }\n  })\n}\n"]}