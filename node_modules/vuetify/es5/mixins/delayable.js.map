{"version":3,"file":"delayable.js","sourceRoot":"","sources":["../../src/mixins/delayable.js"],"names":[],"mappings":";;;;;AAAA,AAOG,AACH;;;;;;;;;AACE,AAAI,UAAE,AAAW;AAEjB,AAAI;AAAE,AAAG,AAAE,AAAC;AACV,AAAW,yBAAE,AAAI;AACjB,AAAY,0BAAE,AAAI,AACnB,AAAC;AAHW;;AAKb,AAAK;AACH,AAAS;AACP,AAAI,kBAAE,CAAC,AAAM,QAAE,AAAM,AAAC;AACtB,AAAO,qBAAE,AAAC,AACX;AAHU;AAIX,AAAU;AACR,AAAI,kBAAE,CAAC,AAAM,QAAE,AAAM,AAAC;AACtB,AAAO,qBAAE,AAAG,AACb,AACF;AAJa;AALP;AAWP,AAAO;AACL,AAKG;;;;;;AACH,AAAU;AACR,AAAY,yBAAC,AAAI,KAAC,AAAW,AAAC;AAC9B,AAAY,yBAAC,AAAI,KAAC,AAAY,AAAC,AACjC;AAAC;;AACD,AAQG;;;;;;;;;AACH,AAAQ,oCAAE,AAAI,MAAE,AAAE;AAChB,AAAI,iBAAC,AAAU,AAAE;AAEjB,gBAAM,AAAK,QAAG,AAAQ,SAAC,AAAI,AAAC,KAAG,AAAI,AAAO,AAAC,iBAAE,AAAE,AAAC;AAEhD,AAAI,AAAC,iBAAG,AAAI,AAAS,AAAC,oBAAG,AAAU,WAAC,AAAE,IAAE,AAAK,AAAC,AAChD;AAAC,AACF,AACF;AA5BU;AAnBI","sourcesContent":["/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close\n * delay time for elements\n */\nexport default {\n  name: 'delayable',\n\n  data: () => ({\n    openTimeout: null,\n    closeTimeout: null\n  }),\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 200\n    }\n  },\n\n  methods: {\n    /**\n     * Clear any pending delay\n     * timers from executing\n     *\n     * @return {void}\n     */\n    clearDelay () {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after\n     * a specified delay\n     *\n     * @param  {String}   type\n     * @param  {Function} cb\n     *\n     * @return {void}\n     */\n    runDelay (type, cb) {\n      this.clearDelay()\n\n      const delay = parseInt(this[`${type}Delay`], 10)\n\n      this[`${type}Timeout`] = setTimeout(cb, delay)\n    }\n  }\n}\n"]}