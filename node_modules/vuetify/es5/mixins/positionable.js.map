{"version":3,"file":"positionable.js","sourceRoot":"","sources":["../../src/mixins/positionable.ts"],"names":[],"mappings":";;;;;;;AAAA,AAAO,AAAG,AAAM,AAAK;;;;AACrB,AAAO,AAAE,AAAkB,AAAE,AAAM,AAAiB;;;;AAGpD,IAAM,AAAc;AAClB,AAAQ,YAAE,AAAO;AACjB,AAAM,UAAE,AAAO;AACf,AAAK,SAAE,AAAO;AACd,AAAI,QAAE,AAAO;AACb,AAAK,SAAE,AAAO;AACd,AAAG,OAAE,AAAO,AACb,AASD,AAAM;AAhBiB;;MAgBE,+EAAkB,AAAE;;AAC3C,uBAAW,AAAM;AACf,AAAK,WAAE,AAAQ,SAAC,AAAM,AAAC,AAAC,SAAC,AAAkB,iCAAC,AAAc,gBAAE,AAAQ,AAAC,AAAC,AAAC,YAAC,AAAc,AACvF,AAAC,AACJ;AAHoB,GAAX,AAAG;AAGX,AAED;kBAAe,AAAO,AAAE;AAExB,AAAkC;AAClC,AAyBI","sourcesContent":["import Vue from 'vue'\nimport { filterObjectOnKeys } from '../util/helpers'\nimport { OptionsVue } from 'vue/types/vue'\n\nconst availableProps = {\n  absolute: Boolean,\n  bottom: Boolean,\n  fixed: Boolean,\n  left: Boolean,\n  right: Boolean,\n  top: Boolean\n}\ntype props = Record<keyof typeof availableProps, boolean>\n\ntype someProps<S extends keyof props> = { [P in S]: props[P] }\ntype somePropsDef<S extends keyof props> = { [P in S]: typeof availableProps[P] }\ntype Positionable<S extends keyof props> = OptionsVue<Vue, {}, {}, {}, someProps<S>, somePropsDef<S>>\n\nexport function factory <S extends keyof props> (selected?: S[]): Positionable<S>\nexport function factory (selected: undefined): OptionsVue<Vue, {}, {}, {}, props, typeof availableProps>\nexport function factory (selected: any[] = []): any {\n  return Vue.extend({\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps\n  })\n}\n\nexport default factory()\n\n// Add a `*` before the second `/`\n/* Tests /\nlet single = factory(['top']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet some = factory(['top', 'bottom']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet all = factory().extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n    this.foobar\n  }\n})\n/**/\n"]}