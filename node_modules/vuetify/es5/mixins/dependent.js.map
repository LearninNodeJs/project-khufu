{"version":3,"file":"dependent.js","sourceRoot":"","sources":["../../src/mixins/dependent.js"],"names":[],"mappings":";;;;;;;;AAAA,wBAAyB,AAAQ;AAC/B,QAAM,AAAO,UAAG,AAAE;AAClB,SAAK,IAAI,AAAK,QAAG,AAAC,GAAE,AAAK,QAAG,AAAQ,SAAC,AAAM,QAAE,AAAK,AAAE,SAAE;AACpD,YAAM,AAAK,QAAG,AAAQ,SAAC,AAAK,AAAC;AAC7B,YAAI,AAAK,MAAC,AAAQ,YAAI,AAAK,MAAC,AAAW,aAAE;AACvC,AAAO,oBAAC,AAAI,KAAC,AAAK,AAAC;AACpB,eAAM;AACL,AAAO,oBAAC,AAAI,AAAC,uCAAG,AAAc,eAAC,AAAK,MAAC,AAAS,AAAC,AAAC;AACjD;AACF;AAED,WAAO,AAAO,AAChB;AAAC,AAED;;AACE,AAAI,UAAE,AAAW;AAEjB,AAAI;AACF;AACE,AAAe,6BAAE,AAAI;AACrB,AAAW,yBAAE,AAAI,AAClB,AACH;AAJS;AAIR;;AAED,AAAO;AACL,AAAiB;AACf,gBAAI,AAAI,KAAC,AAAe,iBAAE,OAAO,AAAc,eAAC,AAAI,KAAC,AAAS,AAAC;AAE/D,mBAAO,AAAE,AACX;AAAC;AACD,AAAwB;AACtB,gBAAM,AAAM,SAAG,AAAE;AACjB,gBAAM,AAAc,iBAAG,AAAI,KAAC,AAAiB,AAAE;AAE/C,iBAAK,IAAI,AAAK,QAAG,AAAC,GAAE,AAAK,QAAG,AAAc,eAAC,AAAM,QAAE,AAAK,AAAE,SAAE;AAC1D,AAAM,uBAAC,AAAI,AAAC,sCAAG,AAAc,eAAC,AAAK,AAAC,OAAC,AAA6B,AAAE,AAAC;AACtE;AAED,mBAAO,AAAM,AACf;AAAC;AACD,AAA6B;AAC3B,gBAAM,AAAM,SAAG,CAAC,AAAI,KAAC,AAAG,AAAC;AACzB,gBAAI,AAAI,KAAC,AAAK,MAAC,AAAO,SAAE,AAAM,OAAC,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAO,AAAC;AACvD,AAAM,mBAAC,AAAI,AAAC,sCAAG,AAAI,KAAC,AAAwB,AAAE,AAAC;AAE/C,mBAAO,AAAM,AACf;AAAC,AACF;AAvBQ;AAyBT,AAAK;AACH,AAAQ,oCAAE,AAAG;AACX,gBAAI,AAAG,KAAE,AAAM;AAEf,gBAAM,AAAc,iBAAG,AAAI,KAAC,AAAiB,AAAE;AAC/C,iBAAK,IAAI,AAAK,QAAG,AAAC,GAAE,AAAK,QAAG,AAAc,eAAC,AAAM,QAAE,AAAK,AAAE,SAAE;AAC1D,AAAc,+BAAC,AAAK,AAAC,OAAC,AAAQ,WAAG,AAAK;AACvC,AACH;AAAC,AACF,AACF;AAVQ;AAnCM","sourcesContent":["function searchChildren (children) {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index]\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\nexport default {\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isDependent: true\n    }\n  },\n\n  methods: {\n    getOpenDependents () {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements () {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements () {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    }\n  }\n}\n"]}