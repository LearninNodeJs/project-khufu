{"version":3,"file":"selectable.js","sourceRoot":"","sources":["../../src/mixins/selectable.js"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport VInput from '../components/VInput'\nimport VLabel from '../components/VLabel'\n\n// Mixins\nimport Rippleable from './rippleable'\nimport Comparable from './comparable'\n\n// Utils\nimport { keyCodes } from '../util/helpers'\n\nexport default {\n  name: 'selectable',\n\n  extends: VInput,\n\n  mixins: [Rippleable, Comparable],\n\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n\n  data: vm => ({\n    lazyValue: vm.inputValue\n  }),\n\n  props: {\n    color: {\n      type: String,\n      default: 'accent'\n    },\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String,\n    toggleKeys: {\n      type: Array,\n      default: () => [keyCodes.enter, keyCodes.space]\n    }\n  },\n\n  computed: {\n    classesSelectable () {\n      return this.addTextColorClassChecks(\n        {},\n        this.isDirty ? this.color : this.validationState\n      )\n    },\n    isMultiple () {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive () {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (!this.trueValue || !this.falseValue) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(value, input)\n    },\n    isDirty () {\n      return this.isActive\n    }\n  },\n\n  watch: {\n    inputValue (val) {\n      this.internalValue = val\n    }\n  },\n\n  methods: {\n    genLabel () {\n      return this.$createElement(VLabel, {\n        on: { click: this.onChange },\n        attrs: {\n          for: this.id\n        },\n        props: {\n          color: 'error',\n          focused: this.hasState\n        }\n      }, this.$slots.label || this.label)\n    },\n    genInput (type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({}, {\n          'aria-label': this.label,\n          'aria-checked': this.isActive.toString(),\n          id: this.id,\n          role: type,\n          type,\n          value: this.inputValue\n        }, attrs),\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        }\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter(item => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue || this.falseValue) {\n        // If has a true or false value set\n        input = this.valueComparator(this.trueValue, value) ? this.falseValue : this.trueValue\n      } else if (value) {\n        // If has a value set\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.lazyValue = input\n      this.$emit('change', input)\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    onKeydown (e) {\n      // Overwrite default behavior to only allow\n      // the specified keyCodes\n      if (this.toggleKeys.indexOf(e.keyCode) > -1) {\n        e.preventDefault()\n\n        this.onChange()\n      }\n    }\n  }\n}\n"]}