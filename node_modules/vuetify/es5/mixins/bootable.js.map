{"version":3,"file":"bootable.js","sourceRoot":"","sources":["../../src/mixins/bootable.js"],"names":[],"mappings":";;;;;AAAA,AAOG,AACH;;;;;;;;;AACE,AAAI,UAAE,AAAU;AAEhB,AAAI;AAAE,AAAG,AAAE,AAAC;AACV,AAAQ,sBAAE,AAAK,AAChB,AAAC;AAFW;;AAIb,AAAK;AACH,AAAI,cAAE,AAAO,AACd;AAFM;AAIP,AAAQ;AACN,AAAU;AACR,mBAAO,AAAI,KAAC,AAAQ,YAAI,CAAC,AAAI,KAAC,AAAI,QAAI,AAAI,KAAC,AAAQ,AACrD;AAAC,AACF;AAJS;AAMV,AAAK;AACH,AAAQ;AACN,AAAI,iBAAC,AAAQ,WAAG,AAAI,AACtB;AAAC,AACF;AAJM;AAMP,AAAO;AACL,AAAe,kDAAE,AAAO;AACtB,mBAAO,AAAI,KAAC,AAAU,AAAC,AAAC,aAAC,AAAO,AAAC,AAAC,UAAC,AAAI,AACzC;AAAC,AACF,AACF;AALU;AAvBI","sourcesContent":["/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\nexport default {\n  name: 'bootable',\n\n  data: () => ({\n    isBooted: false\n  }),\n\n  props: {\n    lazy: Boolean\n  },\n\n  computed: {\n    hasContent () {\n      return this.isBooted || !this.lazy || this.isActive\n    }\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    }\n  },\n\n  methods: {\n    showLazyContent (content) {\n      return this.hasContent ? content : null\n    }\n  }\n}\n"]}