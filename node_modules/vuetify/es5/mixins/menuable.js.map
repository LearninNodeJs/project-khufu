{"version":3,"file":"menuable.js","sourceRoot":"","sources":["../../src/mixins/menuable.js"],"names":[],"mappings":"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","sourcesContent":["import Positionable from './positionable'\n\nimport Stackable from './stackable'\nimport Themeable from './themeable'\n\n/* eslint-disable object-property-newline */\nconst dimensions = {\n  activator: {\n    top: 0, left: 0,\n    bottom: 0, right: 0,\n    width: 0, height: 0,\n    offsetTop: 0, scrollHeight: 0\n  },\n  content: {\n    top: 0, left: 0,\n    bottom: 0, right: 0,\n    width: 0, height: 0,\n    offsetTop: 0, scrollHeight: 0\n  },\n  hasWindow: false\n}\n/* eslint-enable object-property-newline */\n\n/**\n * Menuable\n *\n * @mixin\n *\n * Used for fixed or absolutely positioning\n * elements within the DOM\n * Can calculate X and Y axis overflows\n * As well as be manually positioned\n */\nexport default {\n  name: 'menuable',\n\n  mixins: [\n    Positionable,\n    Stackable,\n    Themeable\n  ],\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    dimensions: Object.assign({}, dimensions),\n    isContentActive: false,\n    pageYOffset: 0,\n    stackClass: 'menuable__content__active',\n    stackMinZIndex: 6\n  }),\n\n  props: {\n    activator: {\n      default: null,\n      validator: val => {\n        return ['string', 'object'].includes(typeof val)\n      }\n    },\n    allowOverflow: Boolean,\n    inputActivator: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0\n    },\n    offsetOverflow: Boolean,\n    positionX: {\n      type: Number,\n      default: null\n    },\n    positionY: {\n      type: Number,\n      default: null\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null\n    }\n  },\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const minWidth = a.width < c.width ? c.width : a.width\n      let left = 0\n\n      left += this.left ? a.left - (minWidth - a.width) : a.left\n\n      if (this.offsetX) left += this.left ? -a.width : a.width\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = this.top ? a.bottom - c.height : a.top\n\n      if (!this.isAttached) top += this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator () {\n      return !!this.$slots.activator || this.activator || this.inputActivator\n    },\n    isAttached () {\n      return this.attach !== false\n    }\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    }\n  },\n\n  beforeMount () {\n    this.checkForWindow()\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0\n      }\n    },\n    activate () {},\n    calcLeft () {\n      return `${this.isAttached\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft)\n      }px`\n    },\n    calcTop () {\n      return `${this.isAttached\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop)\n      }px`\n    },\n    calcXOverflow (left) {\n      const parsedMaxWidth = isNaN(parseInt(this.maxWidth))\n        ? 0\n        : parseInt(this.maxWidth)\n      const innerWidth = this.getInnerWidth()\n      const maxWidth = Math.max(\n        this.dimensions.content.width,\n        parsedMaxWidth\n      )\n      const totalWidth = left + maxWidth\n      const availableWidth = totalWidth - innerWidth\n\n      if ((!this.left || this.right) && availableWidth > 0) {\n        left = (\n          innerWidth -\n          maxWidth -\n          (innerWidth > 600 ? 30 : 12) // Account for scrollbar\n        )\n      }\n\n      if (left < 0) left = 12\n\n      return left\n    },\n    calcYOverflow (top) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForWindow () {\n      if (!this.hasWindow) {\n        this.hasWindow = typeof window !== 'undefined'\n      }\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.getOffsetTop()\n      }\n    },\n    deactivate () {},\n    getActivator () {\n      if (this.inputActivator) {\n        return this.$el.querySelector('.v-input__slot')\n      }\n\n      if (this.activator) {\n        return typeof this.activator === 'string'\n          ? document.querySelector(this.activator)\n          : this.activator\n      }\n\n      return this.$refs.activator.children.length > 0\n        ? this.$refs.activator.children[0]\n        : this.$refs.activator\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getInnerWidth () {\n      if (!this.hasWindow) return 0\n\n      return window.innerWidth\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height)\n      }\n    },\n    measure (el, selector) {\n      el = selector ? el.querySelector(selector) : el\n\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.isAttached) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft)\n        rect.top = parseInt(style.marginTop)\n      }\n\n      return rect\n    },\n    sneakPeek (cb) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || this.isShown(el)) return cb()\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      requestAnimationFrame(() => (this.isContentActive = true))\n    },\n    isShown (el) {\n      return el.style.display !== 'none'\n    },\n    updateDimensions () {\n      this.checkForWindow()\n      this.checkForPageYOffset()\n\n      const dimensions = {}\n\n      // Activator should already be shown\n      dimensions.activator = !this.hasActivator || this.absolute\n        ? this.absolutePosition()\n        : this.measure(this.getActivator())\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        dimensions.content = this.measure(this.$refs.content)\n\n        this.dimensions = dimensions\n      })\n    }\n  }\n}\n"]}