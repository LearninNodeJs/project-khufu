{"version":3,"file":"transformSRGB.js","sourceRoot":"","sources":["../../../src/util/color/transformSRGB.js"],"names":[],"mappings":"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","sourcesContent":["// For converting XYZ to sRGB\nconst srgbForwardMatrix = [\n  [3.2406, -1.5372, -0.4986],\n  [-0.9689, 1.8758, 0.0415],\n  [0.0557, -0.2040, 1.0570]\n]\n\n// Forward gamma adjust\nconst srgbForwardTransform = C => (\n  C <= 0.0031308\n    ? C * 12.92\n    : 1.055 * C ** (1 / 2.4) - 0.055\n)\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [\n  [0.4124, 0.3576, 0.1805],\n  [0.2126, 0.7152, 0.0722],\n  [0.0193, 0.1192, 0.9505]\n]\n\n// Reverse gamma adjust\nconst srgbReverseTransform = C => (\n  C <= 0.04045\n    ? C / 12.92\n    : ((C + 0.055) / 1.055) ** 2.4\n)\n\nfunction clamp (value) {\n  return Math.max(0, Math.min(1, value))\n}\n\nexport function fromXYZ (xyz) {\n  const rgb = Array(3)\n  const transform = srgbForwardTransform\n  const matrix = srgbForwardMatrix\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(\n      matrix[i][0] * xyz[0] +\n      matrix[i][1] * xyz[1] +\n      matrix[i][2] * xyz[2]\n    )) * 255)\n  }\n\n  // Rescale back to [0, 255]\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0)\n}\n\nexport function toXYZ (rgb) {\n  const xyz = Array(3)\n  const transform = srgbReverseTransform\n  const matrix = srgbReverseMatrix\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  const r = transform((rgb >> 16 & 0xff) / 255)\n  const g = transform((rgb >> 8 & 0xff) / 255)\n  const b = transform((rgb >> 0 & 0xff) / 255)\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b\n  }\n\n  return xyz\n}\n"]}