'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Styles

// Extensions


require('../../../src/stylus/components/_textarea.styl');

var _VTextField = require('../VTextField/VTextField');

var _VTextField2 = _interopRequireDefault(_VTextField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* @vue/component */
exports.default = {
    name: 'v-textarea',
    extends: _VTextField2.default,
    data: function data() {
        return {
            inputHeight: 0
        };
    },
    props: {
        autoGrow: Boolean,
        noResize: Boolean,
        outline: Boolean,
        rowHeight: {
            type: [Number, String],
            default: 24,
            validator: function validator(v) {
                return !isNaN(parseFloat(v));
            }
        },
        rows: {
            type: [Number, String],
            default: 5,
            validator: function validator(v) {
                return !isNaN(parseInt(v, 10));
            }
        }
    },
    computed: {
        classes: function classes() {
            return _extends({
                'v-textarea': true,
                'v-textarea--auto-grow': this.autoGrow
            }, _VTextField2.default.computed.classes.call(this, null));
        },
        dynamicHeight: function dynamicHeight() {
            return this.autoGrow ? this.inputHeight : 'auto';
        },
        isEnclosed: function isEnclosed() {
            return this.textarea || _VTextField2.default.computed.isEnclosed.call(this);
        },
        noResizeHandle: function noResizeHandle() {
            return this.noResize || this.autoGrow;
        }
    },
    watch: {
        lazyValue: function lazyValue() {
            this.autoGrow && this.calculateInputHeight();
        }
    },
    mounted: function mounted() {
        this.autoGrow && this.calculateInputHeight();
    },

    methods: {
        calculateInputHeight: function calculateInputHeight() {
            var _this = this;

            this.$nextTick(function () {
                var height = _this.$refs.marker ? _this.$refs.marker.clientHeight : 0;
                var minHeight = parseInt(_this.rows, 10) * parseFloat(_this.rowHeight);
                _this.inputHeight = Math.max(minHeight, height);
            });
        },
        genInput: function genInput() {
            var input = _VTextField2.default.methods.genInput.call(this);
            input.tag = 'textarea';
            if (this.autoGrow) {
                input.data.style.height = this.inputHeight && this.inputHeight + 'px';
            }
            delete input.data.attrs.type;
            input.data.attrs.rows = this.rows;
            return [input, this.genMarker()];
        },
        genMarker: function genMarker() {
            return this.$createElement('div', {
                staticClass: 'v-textarea__mask',
                domProps: { innerHTML: this.internalValue },
                ref: 'marker'
            });
        },
        onKeyDown: function onKeyDown(e) {
            // Prevents closing of a
            // dialog when pressing
            // enter
            if (this.isFocused && e.keyCode === 13) {
                e.stopPropagation();
            }
            this.internalChange = true;
            this.$emit('keydown', e);
        }
    }
};
//# sourceMappingURL=VTextarea.js.map