{"version":3,"file":"VTextarea.js","sourceRoot":"","sources":["../../../src/components/VTextarea/VTextarea.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_textarea.styl'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n/* @vue/component */\nexport default {\n  name: 'v-textarea',\n\n  extends: VTextField,\n\n  data: () => ({\n    inputHeight: 0\n  }),\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    outline: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: v => !isNaN(parseFloat(v))\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: v => !isNaN(parseInt(v, 10))\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        ...VTextField.computed.classes.call(this, null)\n      }\n    },\n    dynamicHeight () {\n      return this.autoGrow\n        ? this.inputHeight\n        : 'auto'\n    },\n    isEnclosed () {\n      return this.textarea ||\n        VTextField.computed.isEnclosed.call(this)\n    },\n    noResizeHandle () {\n      return this.noResize || this.autoGrow\n    }\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.calculateInputHeight()\n    }\n  },\n\n  mounted () {\n    this.autoGrow && this.calculateInputHeight()\n  },\n\n  methods: {\n    calculateInputHeight () {\n      this.$nextTick(() => {\n        const height = this.$refs.marker ? this.$refs.marker.clientHeight : 0\n        const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n        this.inputHeight = Math.max(minHeight, height)\n      })\n    },\n    genInput () {\n      const input = VTextField.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      if (this.autoGrow) {\n        input.data.style.height = this.inputHeight && `${this.inputHeight}px`\n      }\n      delete input.data.attrs.type\n      input.data.attrs.rows = this.rows\n\n      return [\n        input,\n        this.genMarker()\n      ]\n    },\n    genMarker () {\n      return this.$createElement('div', {\n        staticClass: 'v-textarea__mask',\n        domProps: { innerHTML: this.internalValue },\n        ref: 'marker'\n      })\n    },\n    onKeyDown (e) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused &&\n        e.keyCode === 13\n      ) {\n        e.stopPropagation()\n      }\n\n      this.internalChange = true\n      this.$emit('keydown', e)\n    }\n  }\n}\n"]}