{"version":3,"file":"body.js","sourceRoot":"","sources":["../../../../src/components/VDataTable/mixins/body.js"],"names":[],"mappings":"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","sourcesContent":["import ExpandTransitionGenerator from '../../transitions/expand-transition'\n\nexport default {\n  methods: {\n    genTBody () {\n      const children = this.genItems()\n\n      return this.$createElement('tbody', children)\n    },\n    genExpandedRow (props) {\n      const children = []\n\n      if (this.isExpanded(props.item)) {\n        const expand = this.$createElement('div', {\n          class: 'v-datatable__expand-content',\n          key: props.item[this.itemKey]\n        }, this.$scopedSlots.expand(props))\n\n        children.push(expand)\n      }\n\n      const transition = this.$createElement('transition-group', {\n        class: 'v-datatable__expand-col',\n        attrs: { colspan: this.headerColumns },\n        props: {\n          tag: 'td'\n        },\n        on: ExpandTransitionGenerator('v-datatable__expand-col--expanded')\n      }, children)\n\n      return this.genTR([transition], { class: 'v-datatable__expand-row' })\n    },\n    genFilteredItems () {\n      if (!this.$scopedSlots.items) {\n        return null\n      }\n\n      const rows = []\n      for (let index = 0, len = this.filteredItems.length; index < len; ++index) {\n        const item = this.filteredItems[index]\n        const props = this.createProps(item, index)\n        const row = this.$scopedSlots.items(props)\n\n        rows.push(this.hasTag(row, 'td')\n          ? this.genTR(row, {\n            key: index,\n            attrs: { active: this.isSelected(item) }\n          })\n          : row)\n\n        if (this.$scopedSlots.expand) {\n          const expandRow = this.genExpandedRow(props)\n          rows.push(expandRow)\n        }\n      }\n\n      return rows\n    },\n    genEmptyItems (content) {\n      if (this.hasTag(content, 'tr')) {\n        return content\n      } else if (this.hasTag(content, 'td')) {\n        return this.genTR(content)\n      } else {\n        return this.genTR([this.$createElement('td', {\n          class: {\n            'text-xs-center': typeof content === 'string'\n          },\n          attrs: { colspan: this.headerColumns }\n        }, content)])\n      }\n    }\n  }\n}\n"]}