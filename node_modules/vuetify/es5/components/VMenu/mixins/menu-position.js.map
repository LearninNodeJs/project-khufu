{"version":3,"file":"menu-position.js","sourceRoot":"","sources":["../../../../src/components/VMenu/mixins/menu-position.js"],"names":[],"mappings":";;;;;AAAA,AAOG,AACH;;;;;;;;;AACE,AAAO;AACL,AAAe;AACf,AAAe;AACb,gBAAI,AAAI,KAAC,AAAa,kBAAK,AAAI,MAAE,AAAM;AAEvC,gBAAI,AAAS,YAAG,AAAC;AAEjB,gBAAI,AAAI,KAAC,AAAa,iBAAI,AAAI,KAAC,AAAS,WAAE;AACxC,AAAS,4BAAG,AAAI,KAAC,AAAK,MAAC,AAAO,QAAC,AAAY;AAC5C,mBAAM,IAAI,AAAI,KAAC,AAAa,gBAAG,AAAI,KAAC,AAAU,YAAE;AAC/C,AAAS,AAAG;AACV,AAAgC;AAC/B,AAAI,qBAAC,AAAa,gBAAG,AAAI,KAAC,AAAU,AAAC;AACtC,AAAiC,AACjC;AAAC,AAAI,qBAAC,AAAU,aAAG,AAAC,AAAC,CAFrB;AAGA,AAAsC,AACtC;AAAC,AAAI,qBAAC,AAAa,gBAAG,AAAC,AAAC;AACxB,AAAoC;AACpC,AAAG,AACJ;AACF;AAED,AAAI,iBAAC,AAAK,MAAC,AAAO,QAAC,AAAS,YAAG,AAAS,AAC1C;AAAC;AACD,AAAY;AACV,gBAAI,AAAI,KAAC,AAAU,YAAE,OAAO,AAAC;AAE7B,mBAAO,AAAQ,SAAC,AAAI,KAAC,AAAU,WAAC,AAAS,UAAC,AAAI,OAAG,AAAI,KAAC,AAAa,gBAAG,AAAC,AAAC,AAC1E;AAAC;AACD,AAAW;AACT,gBAAM,AAAa,sBAAS,AAAI,KAAC,AAAI,KAAC,AAAK,AAAC,OACzC,AAAS;AAAC,AAAC,AAAC,AAAE,uBAAC,AAAC,EAAC,AAAS,UAAC,AAAQ,SAAC,AAAsB,AAAC,AAAC;aADzC,AAAK;AAG3B,gBAAI,AAAa,kBAAK,CAAC,AAAC,GAAE;AACxB,AAAI,qBAAC,AAAa,gBAAG,AAAI;AAEzB,uBAAO,AAAI,KAAC,AAAW;AACxB;AAED,AAAI,iBAAC,AAAa,gBAAG,AAAa;AAClC,AAAI,iBAAC,AAAS,YAAG,AAAI,KAAC,AAAK,MAAC,AAAM,SAAG,AAAC,AACpC,AAAC,IAAC,AAAI,KAAC,AAAK,MAAC,AAAM,SAAG,AAAC,AACvB,AAAC,IAAC,AAAI,KAAC,AAAK,MAAC,AAAM;AACrB,gBAAI,AAAgB,mBAAG,AAAI,KAAC,AAAa;AACzC,gBAAI,AAAa;AAEjB,AAA0B;AAC1B,gBAAI,AAAa,gBAAG,AAAI,KAAC,AAAU,cACjC,AAAa,gBAAG,AAAI,KAAC,AAAS,WAC9B;AACA,AAAa,gCAAG,AAAG,MAAG,AAAI,KAAC,AAAU;AACvC,AAA4B;AAC3B,uBAAU,AAAa,iBAAI,AAAI,KAAC,AAAS,WAAE;AAC1C,AAAyB;AACzB,AAA6B;AAC7B,AAA0B;AAC1B,AAAgB,oCAAI,AAAC;AACrB,AAAa,gCAAG,CAAC,AAAa,gBAAG,AAAI,KAAC,AAAS,AAAC,aAAG,AAAI,KAAC,AAAU;AACpE,AAA+B;AAC9B,aAPM,MAOA;AACL,AAAa,gCAAG,AAAa,gBAAG,AAAI,KAAC,AAAU;AAChD;AAED,AAAO,mBACL,AAAI,KAAC,AAAW,cAChB,AAAgB,mBAChB,AAAa,AACb,gBAAC,AAAI,KAAC,AAAU,aAAG,AAAC,AAAC,AACtB,AACH;AAAC,AACF,AACF;AAvEU;AADI","sourcesContent":["/**\n * Menu position\n *\n * @mixin\n *\n * Used for calculating an automatic position (used for VSelect)\n * Will position the VMenu content properly over the VSelect\n */\nexport default {\n  methods: {\n    // Revisit this\n    calculateScroll () {\n      if (this.selectedIndex === null) return\n\n      let scrollTop = 0\n\n      if (this.selectedIndex >= this.stopIndex) {\n        scrollTop = this.$refs.content.scrollHeight\n      } else if (this.selectedIndex > this.startIndex) {\n        scrollTop = (\n          // Top position of selected item\n          (this.selectedIndex * this.tileHeight) +\n          // Remove half of a tile's height\n          (this.tileHeight / 2) +\n          // Account for padding offset on lists\n          (this.defaultOffset / 2) -\n          // Half of the auto content's height\n          100\n        )\n      }\n\n      this.$refs.content.scrollTop = scrollTop\n    },\n    calcLeftAuto () {\n      if (this.isAttached) return 0\n\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const selectedIndex = Array.from(this.tiles)\n        .findIndex(n => n.classList.contains('v-list__tile--active'))\n\n      if (selectedIndex === -1) {\n        this.selectedIndex = null\n\n        return this.computedTop\n      }\n\n      this.selectedIndex = selectedIndex\n      this.stopIndex = this.tiles.length > 4\n        ? this.tiles.length - 4\n        : this.tiles.length\n      let additionalOffset = this.defaultOffset\n      let offsetPadding\n\n      // Menu should be centered\n      if (selectedIndex > this.startIndex &&\n        selectedIndex < this.stopIndex\n      ) {\n        offsetPadding = 1.5 * this.tileHeight\n      // Menu should be offset top\n      } else if (selectedIndex >= this.stopIndex) {\n        // Being offset top means\n        // we have to account for top\n        // and bottom list padding\n        additionalOffset *= 2\n        offsetPadding = (selectedIndex - this.stopIndex) * this.tileHeight\n      // Menu should be offset bottom\n      } else {\n        offsetPadding = selectedIndex * this.tileHeight\n      }\n\n      return (\n        this.computedTop +\n        additionalOffset -\n        offsetPadding -\n        (this.tileHeight / 2)\n      )\n    }\n  }\n}\n"]}