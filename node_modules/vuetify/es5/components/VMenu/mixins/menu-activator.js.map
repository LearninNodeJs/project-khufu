{"version":3,"file":"menu-activator.js","sourceRoot":"","sources":["../../../../src/components/VMenu/mixins/menu-activator.js"],"names":[],"mappings":";;;;;AAAA,AAOG,AACH;;;;;;;;;AACE,AAAO;AACL,AAAqB,8DAAE,AAAC;AACtB,gBAAI,AAAI,KAAC,AAAQ,UAAE,AAAM;AACzB,gBAAI,AAAI,KAAC,AAAW,eAAI,CAAC,AAAI,KAAC,AAAQ,UAAE;AACtC,AAAI,qBAAC,AAAY,AAAE,eAAC,AAAK,AAAE;AAC3B,AAAI,qBAAC,AAAQ,WAAG,AAAI;AACpB,AAAI,qBAAC,AAAS,YAAG,AAAC,EAAC,AAAO;AAC1B,AAAI,qBAAC,AAAS,YAAG,AAAC,EAAC,AAAO;AAC3B,mBAAM,IAAI,AAAI,KAAC,AAAY,gBAAI,AAAI,KAAC,AAAQ,UAAE;AAC7C,AAAI,qBAAC,AAAY,AAAE,eAAC,AAAI,AAAE;AAC1B,AAAI,qBAAC,AAAQ,WAAG,AAAK;AACtB,AACH;AAAC;AACD,AAAiB;;;AACf,AAAI,iBAAC,AAAQ,SAAC,AAAM,QAAE,AAAG,AAAE;AACzB,oBAAI,AAAI,MAAC,AAAc,gBAAE,AAAM;AAE/B,AAAI,sBAAC,AAAc,iBAAG,AAAI;AAC1B,AAAI,sBAAC,AAAQ,WAAG,AAAI,AACtB;AAAC,AAAC,AACJ;AAAC;AACD,AAAiB,sDAAE,AAAC;;;AAClB,AAAmC;AACnC,AAAI,iBAAC,AAAQ,SAAC,AAAO,SAAE,AAAG,AAAE;AAC1B,oBAAI,AAAI,OAAC,AAAK,MAAC,AAAO,QAAC,AAAQ,SAAC,AAAC,EAAC,AAAa,AAAC,gBAAE,AAAM;AAExD,AAAqB,sCAAC,AAAG,AAAE;AACzB,AAAI,2BAAC,AAAQ,WAAG,AAAK;AACrB,AAAI,2BAAC,AAAc,AAAE,AACvB;AAAC,AAAC,AACJ;AAAC,AAAC,AACJ;AAAC;AACD,AAAkB;gBAAE,AAAS,gFAAG,AAAI;;AAClC,gBAAI,CAAC,AAAS,WAAE,AAAM;AACtB,AAAS,sBAAC,AAAgB,iBAAC,AAAO,SAAE,AAAI,KAAC,AAAqB,AAAC,AACjE;AAAC;AACD,AAAqB;gBAAE,AAAS,gFAAG,AAAI;;AACrC,gBAAI,CAAC,AAAS,WAAE,AAAM;AACtB,AAAS,sBAAC,AAAmB,oBAAC,AAAO,SAAE,AAAI,KAAC,AAAqB,AAAC,AACpE;AAAC,AACF,AACF;AAzCU;AADI","sourcesContent":["/**\n * Menu activator\n *\n * @mixin\n *\n * Handles the click and hover activation\n * Supports slotted and detached activators\n */\nexport default {\n  methods: {\n    activatorClickHandler (e) {\n      if (this.disabled) return\n      if (this.openOnClick && !this.isActive) {\n        this.getActivator().focus()\n        this.isActive = true\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      } else if (this.closeOnClick && this.isActive) {\n        this.getActivator().blur()\n        this.isActive = false\n      }\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    addActivatorEvents (activator = null) {\n      if (!activator) return\n      activator.addEventListener('click', this.activatorClickHandler)\n    },\n    removeActivatorEvents (activator = null) {\n      if (!activator) return\n      activator.removeEventListener('click', this.activatorClickHandler)\n    }\n  }\n}\n"]}