{"version":3,"file":"menu-generators.js","sourceRoot":"","sources":["../../../../src/components/VMenu/mixins/menu-generators.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * Menu generators\n *\n * @mixin\n *\n * Used for creating the DOM elements for VMenu\n */\nexport default {\n  methods: {\n    genActivator () {\n      if (!this.$slots.activator) return null\n\n      const options = {\n        staticClass: 'v-menu__activator',\n        'class': {\n          'v-menu__activator--active': this.hasJustFocused || this.isActive\n        },\n        ref: 'activator',\n        on: {}\n      }\n\n      if (this.openOnHover) {\n        options.on['mouseenter'] = this.mouseEnterHandler\n        options.on['mouseleave'] = this.mouseLeaveHandler\n      } else if (this.openOnClick) {\n        options.on['click'] = this.activatorClickHandler\n      }\n\n      return this.$createElement('div', options, this.$slots.activator)\n    },\n\n    genTransition () {\n      if (!this.transition) return this.genContent()\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, [this.genContent()])\n    },\n\n    genDirectives () {\n      // Do not add click outside for hover menu\n      const directives = !this.openOnHover && this.closeOnClick ? [{\n        name: 'click-outside',\n        value: () => (this.isActive = false),\n        args: {\n          closeConditional: this.closeConditional,\n          include: () => [this.$el, ...this.getOpenDependentElements()]\n        }\n      }] : []\n\n      directives.push({\n        name: 'show',\n        value: this.isContentActive\n      })\n\n      return directives\n    },\n\n    genContent () {\n      const options = {\n        staticClass: 'v-menu__content',\n        'class': {\n          [this.contentClass.trim()]: true,\n          'v-menu__content--auto': this.auto,\n          'menuable__content__active': this.isActive,\n          'theme--dark': this.dark,\n          'theme--light': this.light\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: e => {\n            e.stopPropagation()\n            if (e.target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          }\n        }\n      }\n\n      !this.disabled && this.openOnHover && (options.on.mouseenter = this.mouseEnterHandler)\n      this.openOnHover && (options.on.mouseleave = this.mouseLeaveHandler)\n\n      return this.$createElement('div', options, this.showLazyContent(this.$slots.default))\n    }\n  }\n}\n"]}