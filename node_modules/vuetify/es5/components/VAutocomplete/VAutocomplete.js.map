{"version":3,"file":"VAutocomplete.js","sourceRoot":"","sources":["../../../src/components/VAutocomplete/VAutocomplete.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_autocompletes.styl'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\nexport default {\n  name: 'v-autocomplete',\n\n  extends: VSelect,\n\n  data: vm => ({\n    attrsInput: null,\n    lazySearch: vm.searchInput,\n    lazyValue: vm.value != null\n      ? vm.value\n      : vm.multi || vm.tags ? [] : undefined\n  }),\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    asyncItems: Boolean,\n    browserAutocomplete: {\n      type: String,\n      default: 'off'\n    },\n    combobox: Boolean,\n    delimiters: Array,\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        const hasValue = val => val != null ? val : ''\n\n        const text = hasValue(itemText)\n        const query = hasValue(queryText)\n\n        return text.toString()\n          .toLowerCase()\n          .indexOf(query.toString().toLowerCase()) > -1\n      }\n    },\n    noFilter: Boolean,\n    offsetY: {\n      type: Boolean,\n      default: true\n    },\n    offsetOverflow: {\n      type: Boolean,\n      default: true\n    },\n    searchInput: {\n      default: undefined\n    },\n    tags: Boolean,\n    transition: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n\n  computed: {\n    classes () {\n      return Object.assign({}, VSelect.computed.classes.call(this), {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      })\n    },\n    computedItems () {\n      return this.filteredItems\n    },\n    /**\n     * The range of the current input text\n     *\n     * @return {Number}\n     */\n    currentRange () {\n      if (this.selectedItem == null) return 0\n\n      return this.getText(this.selectedItem).toString().length\n    },\n    filteredItems () {\n      if (!this.isSearching || this.noFilter) return this.allItems\n\n      return this.allItems.filter(i => this.filter(i, this.internalSearch, this.getText(i)))\n    },\n    hasSlot () {\n      return VSelect.computed.hasSlot.call(this) || this.tags\n    },\n    internalSearch: {\n      get () {\n        return this.lazySearch\n      },\n      set (val) {\n        this.lazySearch = val\n\n        this.$emit('update:searchInput', val)\n      }\n    },\n    isAnyValueAllowed () {\n      return this.combobox || this.tags\n    },\n    isDirty () {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isMulti () {\n      return this.tags || VSelect.computed.isMulti.call(this)\n    },\n    isSearching () {\n      if (this.isMulti) return this.searchIsDirty\n\n      return this.internalSearch !== this.getText(this.selectedItem)\n    },\n    menuCanShow () {\n      if (!this.isFocused) return false\n\n      const filtered = this.filteredItems.length > 0\n\n      if (this.isAnyValueAllowed) {\n        return filtered\n      }\n\n      return filtered || !this.asyncItems\n    },\n    menuProps () {\n      return Object.assign(VSelect.computed.menuProps.call(this), {\n        contentClass: 'v-autocomplete__content',\n        value: this.menuCanShow && this.isMenuActive\n      })\n    },\n    searchIsDirty () {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem () {\n      if (this.isMulti) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.computed.listData.call(this)\n\n      Object.assign(data.props, {\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch\n      })\n\n      return data\n    }\n  },\n\n  watch: {\n    filteredItems (val) {\n      if (this.isAnyValueAllowed) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        this.setMenuIndex(val.length === 1 ? 0 : -1)\n      })\n    },\n    internalValue () {\n      this.setSearch()\n    },\n    isFocused (val) {\n      if (val) {\n        this.$refs.input &&\n          this.$refs.input.select()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    searchInput (val) {\n      this.lazySearch = val\n    },\n    internalSearch (val) {\n      if (\n        val &&\n        this.tags &&\n        this.delimiters\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter == null) return\n\n        this.internalSearch = val.slice(0, val.length - delimiter.length)\n        this.updateTags()\n      }\n\n      if (this.isMenuActive &&\n        this.$refs.menu\n      ) {\n        this.$refs.menu.updateDimensions()\n      }\n    }\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    activateMenu () {\n      if (this.menuCanShow) {\n        this.isMenuActive = true\n      }\n    },\n    changeSelectedIndex (keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (![\n        keyCodes.backspace,\n        keyCodes.left,\n        keyCodes.right,\n        keyCodes.delete\n      ].includes(keyCode)) return\n\n      const indexes = this.selectedItems.length - 1\n\n      if (keyCode === keyCodes.left) {\n        this.selectedIndex = this.selectedIndex === -1\n          ? indexes\n          : this.selectedIndex - 1\n      } else if (keyCode === keyCodes.right) {\n        this.selectedIndex = this.selectedIndex >= indexes\n          ? -1\n          : this.selectedIndex + 1\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = indexes\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if ([\n        keyCodes.backspace,\n        keyCodes.delete\n      ].includes(keyCode) &&\n        !this.getDisabled(currentItem)\n      ) {\n        const newIndex = this.selectedIndex === indexes\n          ? this.selectedIndex - 1\n          : this.selectedItems[this.selectedIndex + 1]\n            ? this.selectedIndex\n            : -1\n\n        if (newIndex === -1) {\n          this.internalValue = this.isMulti ? [] : undefined\n        } else {\n          this.selectItem(currentItem)\n        }\n\n        this.selectedIndex = newIndex\n      }\n    },\n    genInput () {\n      const input = VTextField.methods.genInput.call(this)\n\n      input.data.attrs.role = 'combobox'\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genSelections () {\n      return this.hasSlot || this.isMulti\n        ? VSelect.methods.genSelections.call(this)\n        : []\n    },\n    onBlur (e) {\n      this.updateSelf()\n      VSelect.methods.onBlur.call(this, e)\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onInput (e) {\n      if (this.selectedIndex > -1) return\n\n      // If typing and menu is not currently active\n      if (e.target.value) {\n        this.activateMenu()\n        if (!this.isAnyValueAllowed) this.setMenuIndex(0)\n      }\n\n      this.mask && this.resetSelections(e.target)\n      this.internalSearch = e.target.value\n      this.badInput = e.target.validity && e.target.validity.badInput\n    },\n    onKeyDown (e) {\n      const keyCode = e.keyCode\n\n      VSelect.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.tags &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e) {\n      const menuIndex = this.getMenuIndex()\n\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.tags &&\n        this.internalSearch &&\n        menuIndex === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      } else {\n        VSelect.methods.onTabDown.call(this, e)\n      }\n\n      this.updateSelf()\n    },\n    selectItem (item) {\n      VSelect.methods.selectItem.call(this, item)\n\n      this.setSearch()\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else if (this.tags) {\n        this.selectedItems = this.internalValue\n      } else if (this.combobox) {\n        this.selectedItems = [this.internalValue]\n      } else {\n        VSelect.methods.setSelectedItems.call(this)\n      }\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        this.internalSearch = (\n          !this.selectedItem ||\n          this.isMulti ||\n          this.hasSlot\n        )\n          ? null\n          : this.getText(this.selectedItem)\n      })\n    },\n    setValue () {\n      this.internalValue = this.internalSearch\n      this.$emit('change', this.internalSearch)\n    },\n    updateAutocomplete () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    updateCombobox () {\n      // When using chips and search is dirty\n      // avoid updating input\n      if (this.chips && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the initial value, update the input\n      if (this.internalSearch !== this.internalValue) this.setValue()\n\n      // Reset search if using chips\n      // to avoid a double input\n      if (this.chips) this.internalSearch = undefined\n    },\n    updateSelf () {\n      if (this.tags) this.updateTags()\n      else if (this.combobox) this.updateCombobox()\n      else this.updateAutocomplete()\n    },\n    // Maybe change to onBlur?\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        this.internalValue.splice(index, 1)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    }\n  }\n}\n"]}