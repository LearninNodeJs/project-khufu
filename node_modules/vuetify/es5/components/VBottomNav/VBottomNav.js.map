{"version":3,"file":"VBottomNav.js","sourceRoot":"","sources":["../../../src/components/VBottomNav/VBottomNav.js"],"names":[],"mappings":";;;;;;AACA,AAAO,AAA2C;;AAGlD,AAAO,AAAe,AAAM,AAA8B;;;;AAC1D,AAAO,AAAW,AAAM,AAA2B;;;;AACnD,AAAO,AAAS,AAAM,AAAwB,AAE9C;;;;;;AARA,AAAS;;AASP,AAAI,UAAE,AAAc;AAEpB,AAAM,YAAE,CACN,AAAe,+BAAC,AAAQ,UAAE,CACxB,AAAQ,UACR,AAAO,AACR,AAAC,AACF,AAAW,AACX,AAAS,AACV;AAED,AAAK;AACH,AAAM,gBAAE,CAAC,AAAM,QAAE,AAAM,AAAC;AACxB,AAAM;AACJ,AAAO,qBAAE,AAAE;AACX,AAAI,kBAAE,CAAC,AAAM,QAAE,AAAM,AAAC;AACtB,AAAS;AAAE,AAAC,AAAC,AAAE,uBAAC,CAAC,AAAK,MAAC,AAAQ,SAAC,AAAC,AAAC,AAAC,AACpC;;AAJO;AAKR,AAAK,eAAE,AAAO;AACd,AAAK,eAAE,EAAE,AAAQ,UAAE,AAAK,AAAE,AAC3B;AATM;AAWP,AAAK;AACH,AAAM;AACJ,AAAI,iBAAC,AAAM,AAAE,AACf;AAAC,AACF;AAJM;AAMP,AAAQ;AACN,AAAO;AACL;AACE,AAAwB,0CAAE,AAAI,KAAC,AAAQ;AACvC,AAAqB,uCAAE,CAAC,AAAI,KAAC,AAAQ,AAAI,aAAC,AAAI,KAAC,AAAG,OAAI,AAAI,KAAC,AAAK,AAAC;AACjE,AAAqB,uCAAE,AAAI,KAAC,AAAK;AACjC,AAAsB,wCAAE,AAAI,KAAC,AAAK,AACnC,AACH;AANS;AAMR;AACD,AAAc;AACZ,mBAAO,AAAQ,SAAC,AAAI,KAAC,AAAM,AAAC,AAC9B;AAAC,AACF;AAZS;AAcV,AAAO;AACL,AAAU,wCAAE,AAAC;AACX,gBAAM,AAAI,OAAG,AAAI,KAAC,AAAQ,SAAC,AAAC,AAAC;AAC7B,mBAAO,AAAI,KAAC,AAAM,WAAK,AAAI,AAC7B;AAAC;;AACD,AAIG;;;;;AACH,AAAiB;AACf,mBAAO,CAAC,AAAI,KAAC,AAAK,AAChB,AAAC,QAAC,AAAC,AACH,AAAC,IAAC,AAAI,KAAC,AAAc,AACzB;AAAC;AACD,AAAW,0CAAE,AAAC;AACZ,gBAAM,AAAI,OAAG,AAAI,KAAC,AAAQ,SAAC,AAAC,AAAC;AAE7B,AAAI,iBAAC,AAAK,MAAC,AAAe,iBAAE,AAAI,AAAC,AACnC;AAAC,AACF;AApBQ;AAsBT,AAAM,4BAAE,AAAC;AACP,iBAAS,AAAK;AACZ,AAAW,yBAAE,AAAc;AAC3B,AAAK,mBAAE,AAAI,KAAC,AAA6B,8BAAC,AAAI,KAAC,AAAO,AAAC;AACvD,AAAK;AACH,AAAM,AAAE,wBAAG,AAAQ,SAAC,AAAI,KAAC,AAAc,AAAC,AAAI,AAC7C;AAFM;AAGP,AAAG,iBAAE,AAAS,AACf;AAPe,SAAT,AAAC,EAOL,AAAI,KAAC,AAAM,OAAC,AAAO,AAAC,AACzB;AAAC,AACF;AA3Ec;AALf,AAAS","sourcesContent":["// Styles\nimport '../../stylus/components/_bottom-navs.styl'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\n\nexport default {\n  name: 'v-bottom-nav',\n\n  mixins: [\n    Applicationable('bottom', [\n      'height',\n      'value'\n    ]),\n    ButtonGroup,\n    Colorable\n  ],\n\n  props: {\n    active: [Number, String],\n    height: {\n      default: 56,\n      type: [Number, String],\n      validator: v => !isNaN(parseInt(v))\n    },\n    shift: Boolean,\n    value: { required: false }\n  },\n\n  watch: {\n    active () {\n      this.update()\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-bottom-nav--absolute': this.absolute,\n        'v-bottom-nav--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-nav--shift': this.shift,\n        'v-bottom-nav--active': this.value\n      }\n    },\n    computedHeight () {\n      return parseInt(this.height)\n    }\n  },\n\n  methods: {\n    isSelected (i) {\n      const item = this.getValue(i)\n      return this.active === item\n    },\n    /**\n     * Update the application layout\n     *\n     * @return {number}\n     */\n    updateApplication () {\n      return !this.value\n        ? 0\n        : this.computedHeight\n    },\n    updateValue (i) {\n      const item = this.getValue(i)\n\n      this.$emit('update:active', item)\n    }\n  },\n\n  render (h) {\n    return h('div', {\n      staticClass: 'v-bottom-nav',\n      class: this.addBackgroundColorClassChecks(this.classes),\n      style: {\n        height: `${parseInt(this.computedHeight)}px`\n      },\n      ref: 'content'\n    }, this.$slots.default)\n  }\n}\n"]}