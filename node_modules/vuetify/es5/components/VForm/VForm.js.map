{"version":3,"file":"VForm.js","sourceRoot":"","sources":["../../../src/components/VForm/VForm.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_forms.styl'\n\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\nexport default {\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  mixins: [RegistrableProvide('form')],\n\n  data () {\n    return {\n      inputs: [],\n      errorBag: {}\n    }\n  },\n\n  props: {\n    value: Boolean,\n    lazyValidation: Boolean\n  },\n\n  watch: {\n    errorBag: {\n      handler () {\n        const errors = Object.values(this.errorBag).includes(true)\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n\n  methods: {\n    watchInput (input) {\n      const watcher = input => {\n        return input.$watch('valid', val => {\n          this.$set(this.errorBag, input._uid, !val)\n        }, { immediate: true })\n      }\n\n      const watchers = {\n        valid: undefined,\n        shouldValidate: undefined\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.input = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    validate () {\n      const errors = this.inputs.filter(input => !input.validate(true)).length\n      return !errors\n    },\n    reset () {\n      for (let i = this.inputs.length; i--;) {\n        this.inputs[i].reset()\n      }\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    register (input) {\n      const unwatch = this.watchInput(input)\n      this.inputs.push({\n        uid: input._uid,\n        validate: input.validate,\n        reset: input.reset,\n        unwatch\n      })\n    },\n    unregister (input) {\n      const found = this.inputs.find(i => i.uid === input._uid)\n\n      if (!found) return\n\n      found.unwatch.valid && found.unwatch.valid()\n      found.unwatch.shouldValidate && found.unwatch.shouldValidate()\n      this.inputs = this.inputs.filter(i => i.uid !== found.uid)\n      this.$delete(this.errorBag, found.uid)\n    }\n  },\n\n  render (h) {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: Object.assign({\n        novalidate: true\n      }, this.$attrs),\n      on: {\n        submit: e => this.$emit('submit', e)\n      }\n    }, this.$slots.default)\n  }\n}\n"]}