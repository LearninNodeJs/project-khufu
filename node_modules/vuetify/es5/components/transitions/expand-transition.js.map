{"version":3,"file":"expand-transition.js","sourceRoot":"","sources":["../../../src/components/transitions/expand-transition.js"],"names":[],"mappings":";;;;;;;QAEyB,AAAmB,0FAAG,AAAE;;AAC/C;AACE,AAAK,8BAAE,AAAE,IAAE,AAAI;AACb,AAAE,eAAC,AAAO,UAAG,AAAE,GAAC,AAAU;AAE1B,AAAoB,+CAAC,AAAE,IAAE,AAAe,iBAAE,AAAI,AAAC;AAE/C,AAAoC;AACpC,AAAE,eAAC,AAAK,MAAC,AAAQ,WAAG,AAAQ;AAC5B,AAAE,eAAC,AAAK,MAAC,AAAM,SAAG,AAAC;AACnB,AAAE,eAAC,AAAK,MAAC,AAAO,UAAG,AAAO;AAC1B,AAAmB,mCAAI,AAAE,GAAC,AAAO,QAAC,AAAS,UAAC,AAAG,IAAC,AAAmB,AAAC;AAEpE,AAAU;AAAC,AAAG,AAAE,AAAC,uBAAC,AAAE,GAAC,AAAK,MAAC,AAAM,AAAG,SAAG,AAAE,GAAC,AAAY,AAAI,AAAC;eAAE,AAAG,AAAC,AACnE;AAAC;AAED,AAAU,wCAAE,AAAE;AACZ,AAAE,eAAC,AAAK,MAAC,AAAQ,WAAG,AAAI;AACxB,AAAE,eAAC,AAAK,MAAC,AAAM,SAAG,AAAI,AACxB;AAAC;AAED,AAAK,8BAAE,AAAE,IAAE,AAAI;AACb,AAA4B;AAC5B,AAAoB,+CAAC,AAAE,IAAE,AAAe,iBAAE,AAAI,AAAC;AAE/C,AAAuC;AACvC,AAAE,eAAC,AAAK,MAAC,AAAQ,WAAG,AAAQ;AAC5B,AAAE,eAAC,AAAK,MAAC,AAAM,AAAG,SAAG,AAAE,GAAC,AAAY,AAAI;AAExC,AAAU;AAAC,AAAG,AAAE,AAAC,uBAAC,AAAE,GAAC,AAAK,MAAC,AAAM,SAAG,AAAC,AAAC;eAAE,AAAG,AAAC,AAC9C;AAAC;AAED,AAAU,wCAAE,AAAE;AACZ,AAAmB,mCAAI,AAAE,GAAC,AAAO,WAAI,AAAE,GAAC,AAAO,QAAC,AAAS,UAAC,AAAM,OAAC,AAAmB,AAAC,AACvF;AAAC,AACF,AACH;AAnCS;AAmCR;;AAtCD,AAAO,AAAE,AAAoB,AAAE,AAAM,AAAoB,AAEzD,AAAM,AAAC,AAAO","sourcesContent":["import { addOnceEventListener } from '../../util/helpers'\n\nexport default function (expandedParentClass = '') {\n  return {\n    enter (el, done) {\n      el._parent = el.parentNode\n\n      addOnceEventListener(el, 'transitionend', done)\n\n      // Get height that is to be scrolled\n      el.style.overflow = 'hidden'\n      el.style.height = 0\n      el.style.display = 'block'\n      expandedParentClass && el._parent.classList.add(expandedParentClass)\n\n      setTimeout(() => (el.style.height = `${el.scrollHeight}px`), 100)\n    },\n\n    afterEnter (el) {\n      el.style.overflow = null\n      el.style.height = null\n    },\n\n    leave (el, done) {\n      // Remove initial transition\n      addOnceEventListener(el, 'transitionend', done)\n\n      // Set height before we transition to 0\n      el.style.overflow = 'hidden'\n      el.style.height = `${el.offsetHeight}px`\n\n      setTimeout(() => (el.style.height = 0), 100)\n    },\n\n    afterLeave (el) {\n      expandedParentClass && el._parent && el._parent.classList.remove(expandedParentClass)\n    }\n  }\n}\n"]}