{"version":3,"file":"VProgressCircular.js","sourceRoot":"","sources":["../../../src/components/VProgressCircular/VProgressCircular.js"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_progress-circular.styl'\n\nimport Colorable from '../../mixins/colorable'\n\nexport default {\n  name: 'v-progress-circular',\n\n  mixins: [Colorable],\n\n  props: {\n    button: Boolean,\n\n    indeterminate: Boolean,\n\n    rotate: {\n      type: Number,\n      default: 0\n    },\n\n    size: {\n      type: [Number, String],\n      default: 32\n    },\n\n    width: {\n      type: Number,\n      default: 4\n    },\n\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    calculatedSize () {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference () {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes () {\n      return this.addTextColorClassChecks({\n        'v-progress-circular': true,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button\n      })\n    },\n\n    normalizedValue () {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return this.value\n    },\n\n    radius () {\n      return 20\n    },\n\n    strokeDashArray () {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset () {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth () {\n      return this.width / this.size * this.viewBoxSize * 2\n    },\n\n    styles () {\n      return {\n        height: `${this.calculatedSize}px`,\n        width: `${this.calculatedSize}px`\n      }\n    },\n\n    svgStyles () {\n      return {\n        transform: `rotate(${this.rotate}deg)`\n      }\n    },\n\n    viewBoxSize () {\n      return this.radius / (1 - this.width / this.size)\n    }\n  },\n\n  methods: {\n    genCircle (h, name, offset) {\n      return h('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset\n        }\n      })\n    },\n    genSvg (h) {\n      const children = [\n        this.indeterminate || this.genCircle(h, 'underlay', 0),\n        this.genCircle(h, 'overlay', this.strokeDashOffset)\n      ]\n\n      return h('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`\n        }\n      }, children)\n    }\n  },\n\n  render (h) {\n    const info = h('div', { class: 'v-progress-circular__info' }, [this.$slots.default])\n    const svg = this.genSvg(h)\n\n    return h('div', {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners\n    }, [svg, info])\n  }\n}\n"]}