{"version":3,"file":"VTabsItems.js","sourceRoot":"","sources":["../../../src/components/VTabs/VTabsItems.js"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport {\n  provide as RegistrableProvide\n} from '../../mixins/registrable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\nexport default {\n  name: 'v-tabs-items',\n\n  mixins: [RegistrableProvide('tabs')],\n\n  directives: { Touch },\n\n  inject: {\n    registerItems: {\n      default: null\n    },\n    tabProxy: {\n      default: null\n    },\n    unregisterItems: {\n      default: null\n    }\n  },\n\n  data () {\n    return {\n      items: [],\n      lazyValue: this.value,\n      reverse: false\n    }\n  },\n\n  props: {\n    cycle: Boolean,\n    touchless: Boolean,\n    value: [Number, String]\n  },\n\n  computed: {\n    activeIndex () {\n      return this.items.findIndex((item, index) => (item.id || index.toString()) === this.lazyValue)\n    },\n    activeItem () {\n      if (!this.items.length) return undefined\n\n      return this.items[this.activeIndex]\n    },\n    inputValue: {\n      get () {\n        return this.lazyValue\n      },\n      set (val) {\n        val = val.toString()\n\n        this.lazyValue = val\n\n        if (this.tabProxy) this.tabProxy(val)\n        else this.$emit('input', val)\n      }\n    }\n  },\n\n  watch: {\n    activeIndex (current, previous) {\n      this.reverse = current < previous\n      this.updateItems()\n    },\n    value (val) {\n      this.lazyValue = val\n    }\n  },\n\n  mounted () {\n    this.registerItems && this.registerItems(this.changeModel)\n  },\n\n  beforeDestroy () {\n    this.unregisterItems && this.unregisterItems()\n  },\n\n  methods: {\n    changeModel (val) {\n      this.inputValue = val\n    },\n    next (cycle) {\n      let nextIndex = this.activeIndex + 1\n\n      if (!this.items[nextIndex]) {\n        if (!cycle) return\n        nextIndex = 0\n      }\n\n      this.inputValue = this.items[nextIndex].id || nextIndex\n    },\n    prev (cycle) {\n      let prevIndex = this.activeIndex - 1\n\n      if (!this.items[prevIndex]) {\n        if (!cycle) return\n        prevIndex = this.items.length - 1\n      }\n\n      this.inputValue = this.items[prevIndex].id || prevIndex\n    },\n    onSwipe (action) {\n      this[action](this.cycle)\n    },\n    register (item) {\n      this.items.push(item)\n    },\n    unregister (item) {\n      this.items = this.items.filter(i => i !== item)\n    },\n    updateItems () {\n      for (let index = this.items.length; --index >= 0;) {\n        this.items[index].toggle(this.lazyValue, this.reverse, this.isBooted, index)\n      }\n      this.isBooted = true\n    }\n  },\n\n  render (h) {\n    const data = {\n      staticClass: 'v-tabs__items',\n      directives: []\n    }\n\n    !this.touchless && data.directives.push({\n      name: 'touch',\n      value: {\n        left: () => this.onSwipe('next'),\n        right: () => this.onSwipe('prev')\n      }\n    })\n\n    return h('div', data, this.$slots.default)\n  }\n}\n"]}