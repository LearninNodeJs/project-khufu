{"version":3,"file":"VTabItem.js","sourceRoot":"","sources":["../../../src/components/VTabs/VTabItem.js"],"names":[],"mappings":";;;;;;AAAA,AAAO,AAAQ,AAAM,AAAuB;;;;AAE5C,AAAO,AACL,AAAc,AACd,AAAqB,AACtB,AAAM,AAAgB;;AAEvB,AAAO,AACL,AAAM,AAAI,AAAiB,AAC5B,AAAM,AAA0B;;AAEjC,AAAO,AAAK,AAAM,AAAwB,AAE1C;;;;;;;AACE,AAAI,UAAE,AAAY;AAElB,AAAM,YAAE,AACN,AAAQ,qBACR,AAAiB,yBAAC,AAAM,QAAE,AAAY,cAAE,AAAc,AAAC,AACxD;AAED,AAAU;AACR,AAAc;AACd,AAAqB,AACtB;AAHW;AAKZ,AAAU;AACR,AAAK,AACN;AAFW;AAIZ,AAAI;AACF;AACE,AAAQ,sBAAE,AAAK;AACf,AAAO,qBAAE,AAAK,AACf,AACH;AAJS;AAIR;;AAED,AAAK;AACH,AAAE,YAAE,AAAM;AACV,AAAU;AACR,AAAI,kBAAE,CAAC,AAAO,SAAE,AAAM,AAAC;AACvB,AAAO,qBAAE,AAAgB,AAC1B;AAHW;AAIZ,AAAiB;AACf,AAAI,kBAAE,CAAC,AAAO,SAAE,AAAM,AAAC;AACvB,AAAO,qBAAE,AAAwB,AAClC,AACF;AAJoB;AANd;AAYP,AAAQ;AACN,AAAkB;AAChB,mBAAO,AAAI,KAAC,AAAO,AAAC,AAAC,UAAC,AAAI,KAAC,AAAiB,AAAC,AAAC,oBAAC,AAAI,KAAC,AAAU,AAChE;AAAC,AACF;AAJS;AAMV,AAAO;AACL,AAAM,gCAAE,AAAM,QAAE,AAAO,SAAE,AAAc,gBAAE,AAAK;AAC5C,AAAI,iBAAC,AAAG,IAAC,AAAK,MAAC,AAAU,aAAG,CAAC,AAAc,AAAC,AAAC,iBAAC,AAAM,AAAC,AAAC,SAAC,AAAI;AAC3D,AAAI,iBAAC,AAAO,UAAG,AAAO;AACtB,AAAI,iBAAC,AAAQ,WAAG,CAAC,AAAI,KAAC,AAAE,MAAI,AAAK,MAAC,AAAQ,AAAE,AAAC,gBAAK,AAAM,AAC1D;AAAC,AACF;AANQ;AAQT,AAAO;AACL,AAAI,aAAC,AAAI,KAAC,AAAQ,SAAC,AAAI,AAAC,AAC1B;AAAC;AAED,AAAa;AACX,AAAI,aAAC,AAAI,KAAC,AAAU,WAAC,AAAI,AAAC,AAC5B;AAAC;AAED,AAAM,4BAAE,AAAC;AACP,YAAM,AAAI;AACR,AAAW,yBAAE,AAAiB;AAC9B,AAAU;AACR,AAAI,sBAAE,AAAM;AACZ,AAAK,uBAAE,AAAI,KAAC,AAAQ,AACrB,AAAC;AAHW,aAAD;AAIZ,AAAQ,sBAAE,EAAE,AAAE,IAAE,AAAI,KAAC,AAAE,AAAE;AACzB,AAAE,gBAAE,AAAI,KAAC,AAAU,AACpB;AARY;AAUb,YAAM,AAAG,MAAG,AAAC,EAAC,AAAK,OAAE,AAAI,MAAE,AAAI,KAAC,AAAe,gBAAC,AAAI,KAAC,AAAM,OAAC,AAAO,AAAC,AAAC;AAErE,YAAI,CAAC,AAAI,KAAC,AAAkB,oBAAE,OAAO,AAAG;AAExC,iBAAS,AAAY;AACnB,AAAK,mBAAE,EAAE,AAAI,MAAE,AAAI,KAAC,AAAkB,AAAE,AACzC;AAFsB,SAAhB,AAAC,EAEL,CAAC,AAAG,AAAC,AAAC,AACX;AAAC,AACF;AA7Ec","sourcesContent":["import Bootable from '../../mixins/bootable'\n\nimport {\n  VTabTransition,\n  VTabReverseTransition\n} from '../transitions'\n\nimport {\n  inject as RegistrableInject\n} from '../../mixins/registrable'\n\nimport Touch from '../../directives/touch'\n\nexport default {\n  name: 'v-tab-item',\n\n  mixins: [\n    Bootable,\n    RegistrableInject('tabs', 'v-tab-item', 'v-tabs-items')\n  ],\n\n  components: {\n    VTabTransition,\n    VTabReverseTransition\n  },\n\n  directives: {\n    Touch\n  },\n\n  data () {\n    return {\n      isActive: false,\n      reverse: false\n    }\n  },\n\n  props: {\n    id: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'tab-transition'\n    },\n    reverseTransition: {\n      type: [Boolean, String],\n      default: 'tab-reverse-transition'\n    }\n  },\n\n  computed: {\n    computedTransition () {\n      return this.reverse ? this.reverseTransition : this.transition\n    }\n  },\n\n  methods: {\n    toggle (target, reverse, showTransition, index) {\n      this.$el.style.transition = !showTransition ? 'none' : null\n      this.reverse = reverse\n      this.isActive = (this.id || index.toString()) === target\n    }\n  },\n\n  mounted () {\n    this.tabs.register(this)\n  },\n\n  beforeDestroy () {\n    this.tabs.unregister(this)\n  },\n\n  render (h) {\n    const data = {\n      staticClass: 'v-tabs__content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }],\n      domProps: { id: this.id },\n      on: this.$listeners\n    }\n\n    const div = h('div', data, this.showLazyContent(this.$slots.default))\n\n    if (!this.computedTransition) return div\n\n    return h('transition', {\n      props: { name: this.computedTransition }\n    }, [div])\n  }\n}\n"]}