{"version":3,"file":"VTab.js","sourceRoot":"","sources":["../../../src/components/VTabs/VTab.js"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport Routable from '../../mixins/routable'\nimport {\n  inject as RegistrableInject\n} from '../../mixins/registrable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default {\n  name: 'v-tab',\n\n  mixins: [\n    RegistrableInject('tabs', 'v-tab', 'v-tabs'),\n    Routable\n  ],\n\n  inject: ['tabClick'],\n\n  data () {\n    return {\n      isActive: false\n    }\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-tabs__item--active'\n    },\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-tabs__item': true,\n        'v-tabs__item--disabled': this.disabled,\n        [this.activeClass]: !this.to && this.isActive\n      }\n    },\n    action () {\n      let to = this.to || this.href\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return typeof to === 'string'\n        ? to.replace('#', '')\n        : this\n    }\n  },\n\n  watch: {\n    $route: 'onRouteChange'\n  },\n\n  mounted () {\n    this.tabs.register(this)\n    this.onRouteChange()\n  },\n\n  beforeDestroy () {\n    this.tabs.unregister(this)\n  },\n\n  methods: {\n    click (e) {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      this.$emit('click', e)\n\n      this.to || this.tabClick(this)\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link) return\n\n      const path = `_vnode.data.class.${this.activeClass}`\n\n      this.$nextTick(() => {\n        if (getObjectValueByPath(this.$refs.link, path)) {\n          this.tabClick(this)\n        }\n      })\n    },\n    toggle (action) {\n      this.isActive = (action === this) || (action === this.action)\n    }\n  },\n\n  render (h) {\n    const link = this.generateRouteLink()\n    const { data } = link\n\n    // If disabled, use div as anchor tags do not support\n    // being disabled\n    const tag = this.disabled ? 'div' : link.tag\n\n    data.ref = 'link'\n\n    return h('div', {\n      staticClass: 'v-tabs__div'\n    }, [h(tag, data, this.$slots.default)])\n  }\n}\n"]}