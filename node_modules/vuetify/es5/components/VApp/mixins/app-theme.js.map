{"version":3,"file":"app-theme.js","sourceRoot":"","sources":["../../../../src/components/VApp/mixins/app-theme.js"],"names":[],"mappings":"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","sourcesContent":["import { intToHex } from '../../../util/colorUtils'\nimport * as Theme from '../../../util/theme'\n\nexport default {\n  data: () => ({\n    style: null\n  }),\n\n  computed: {\n    parsedTheme () {\n      return Theme.parse(this.$vuetify.theme)\n    },\n    /** @return string */\n    generatedStyles () {\n      const theme = this.parsedTheme\n      let css\n\n      if (this.$vuetify.options.themeCache != null) {\n        css = this.$vuetify.options.themeCache.get(theme)\n        if (css != null) return css\n      }\n\n      const colors = Object.keys(theme)\n\n      if (!colors.length) return ''\n\n      css = `a { color: ${intToHex(theme.primary)}; }`\n\n      for (let i = 0; i < colors.length; ++i) {\n        const name = colors[i]\n        const value = theme[name]\n        if (this.$vuetify.options.themeVariations.includes(name)) {\n          css += Theme.genVariations(name, value).join('')\n        } else {\n          css += Theme.genBaseColor(name, value)\n        }\n      }\n\n      if (this.$vuetify.options.minifyTheme != null) {\n        css = this.$vuetify.options.minifyTheme(css)\n      }\n\n      if (this.$vuetify.options.themeCache != null) {\n        this.$vuetify.options.themeCache.set(theme, css)\n      }\n\n      return css\n    },\n    vueMeta () {\n      if (this.$vuetify.theme === false) return\n      return {\n        style: [{\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet'\n        }]\n      }\n    }\n  },\n\n  // Regular vue-meta\n  metaInfo () {\n    return this.vueMeta\n  },\n\n  // Nuxt\n  head () {\n    return this.vueMeta\n  },\n\n  watch: {\n    generatedStyles () {\n      !this.meta && this.applyTheme()\n    }\n  },\n\n  created () {\n    if (this.$vuetify.theme === false) return\n\n    if (this.$meta) {\n      // Vue-meta\n      // Handled by metaInfo()/nuxt()\n    } else if (typeof document === 'undefined' && this.$ssrContext) {\n      // SSR\n      this.$ssrContext.head = this.$ssrContext.head || ''\n      this.$ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\">${this.generatedStyles}</style>`\n    } else if (typeof document !== 'undefined') {\n      // Client-side\n      this.genStyle()\n      this.applyTheme()\n    }\n  },\n\n  methods: {\n    applyTheme () {\n      if (this.style) this.style.innerHTML = this.generatedStyles\n    },\n    genStyle () {\n      let style = document.getElementById('vuetify-theme-stylesheet')\n\n      if (!style) {\n        style = document.createElement('style')\n        style.type = 'text/css'\n        style.id = 'vuetify-theme-stylesheet'\n        if (this.$vuetify.options.cspNonce) {\n          style.setAttribute('nonce', this.$vuetify.options.cspNonce)\n        }\n        document.head.appendChild(style)\n      }\n\n      this.style = style\n    }\n  }\n}\n"]}