{"version":3,"file":"VExpansionPanel.js","sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanel.js"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_expansion-panel.styl'\n\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\nexport default {\n  name: 'v-expansion-panel',\n\n  mixins: [Themeable, RegistrableProvide('expansionPanel')],\n\n  provide () {\n    return {\n      expansionPanel: this\n    }\n  },\n\n  data: () => ({\n    items: [],\n    open: []\n  }),\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n    expand: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    value: {\n      type: [Number, Array],\n      default: () => null\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-expansion-panel--focusable': this.focusable,\n        'v-expansion-panel--popout': this.popout,\n        'v-expansion-panel--inset': this.inset,\n        ...this.themeClasses\n      }\n    }\n  },\n\n  watch: {\n    expand (val) {\n      let openIndex\n      if (!val) {\n        // Close all panels unless only one is open\n        const openCount = this.open.reduce((acc, val) => acc + val, 0)\n        const open = Array(this.items.length).fill(false)\n\n        if (openCount === 1) {\n          openIndex = this.open.indexOf(true)\n        }\n\n        if (openIndex > -1) {\n          open[openIndex] = true\n        }\n\n        this.open = open\n      }\n\n      this.$emit('input', val ? this.open : (openIndex > -1 ? openIndex : null))\n    },\n    value (v) {\n      this.updateFromValue(v)\n    }\n  },\n\n  methods: {\n    updateFromValue (v) {\n      if (Array.isArray(v) && !this.expand) return\n\n      let open = Array(this.items.length).fill(false)\n      if (typeof v === 'number') {\n        open[v] = true\n      } else if (v !== null) {\n        open = v\n      }\n\n      this.updatePanels(open)\n    },\n    updatePanels (open) {\n      this.open = open\n      for (let i = 0; i < this.items.length; i++) {\n        const active = open && open[i]\n        this.items[i].toggle(active)\n      }\n    },\n    panelClick (uid) {\n      const open = this.expand ? this.open.slice() : Array(this.items.length).fill(false)\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].uid === uid) {\n          open[i] = !this.open[i]\n          !this.expand && this.$emit('input', open[i] ? i : null)\n        }\n      }\n\n      this.updatePanels(open)\n      if (this.expand) this.$emit('input', open)\n    },\n    register (uid, toggle) {\n      this.items.push({ uid, toggle })\n      this.open.push(false)\n    },\n    unregister (uid) {\n      const index = this.items.findIndex(i => i.uid === uid)\n      this.items.splice(index, 1)\n      this.open.splice(index, 1)\n    }\n  },\n\n  mounted () {\n    this.value !== null && this.updateFromValue(this.value)\n  },\n\n  render (h) {\n    return h('ul', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes\n    }, this.$slots.default)\n  }\n}\n"]}