{"version":3,"file":"VExpansionPanelContent.js","sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.js"],"names":[],"mappings":"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","sourcesContent":["import { VExpandTransition } from '../transitions'\n\nimport Bootable from '../../mixins/bootable'\nimport Toggleable from '../../mixins/toggleable'\nimport Rippleable from '../../mixins/rippleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\nimport VIcon from '../VIcon'\n\nimport ClickOutside from '../../directives/click-outside'\n\nimport { consoleWarn } from '../../util/console'\n\nexport default {\n  name: 'v-expansion-panel-content',\n\n  mixins: [Bootable, Toggleable, Rippleable, RegistrableInject('expansionPanel', 'v-expansion-panel', 'v-expansion-panel-content')],\n\n  directives: {\n    ClickOutside\n  },\n\n  inject: ['expansionPanel'],\n\n  data: () => ({\n    height: 'auto'\n  }),\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$vuetify.icons.expand'\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false\n    }\n  },\n\n  computed: {\n    containerClasses () {\n      return {\n        'v-expansion-panel__container--active': this.isActive,\n        'v-expansion-panel__container--disabled': this.isDisabled\n      }\n    },\n    isDisabled () {\n      return this.expansionPanel.disabled || this.disabled\n    },\n    isReadonly () {\n      return this.expansionPanel.readonly || this.readonly\n    }\n  },\n\n  methods: {\n    onKeydown (e) {\n      // Ensure element is the activeElement\n      if (\n        e.keyCode === 13 &&\n        this.$el === document.activeElement\n      ) this.expansionPanel.panelClick(this._uid)\n    },\n    onHeaderClick () {\n      this.isReadonly || this.expansionPanel.panelClick(this._uid)\n    },\n    genBody () {\n      return this.$createElement('div', {\n        ref: 'body',\n        class: 'v-expansion-panel__body',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, this.showLazyContent(this.$slots.default))\n    },\n    genHeader () {\n      return this.$createElement('div', {\n        staticClass: 'v-expansion-panel__header',\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: {\n          click: this.onHeaderClick\n        }\n      }, [\n        this.$slots.header,\n        this.genIcon()\n      ])\n    },\n    genIcon () {\n      if (this.hideActions) return null\n\n      const icon = this.$slots.actions ||\n        this.$createElement(VIcon, this.expandIcon)\n\n      return this.$createElement('transition', {\n        attrs: { name: 'fade-transition' }\n      }, [\n        this.$createElement('div', {\n          staticClass: 'header__icon',\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled\n          }]\n        }, [icon])\n      ])\n    },\n    toggle (active) {\n      if (active) this.isBooted = true\n\n      // We treat bootable differently\n      // Needs time to calc height\n      this.$nextTick(() => (this.isActive = active))\n    }\n  },\n\n  mounted () {\n    this.expansionPanel.register(this._uid, this.toggle)\n\n    // Can be removed once fully deprecated\n    if (typeof this.value !== 'undefined') consoleWarn('v-model has been deprecated', this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregister(this._uid)\n  },\n\n  render (h) {\n    const children = []\n\n    this.$slots.header && children.push(this.genHeader())\n    children.push(h(VExpandTransition, [this.genBody()]))\n\n    return h('li', {\n      staticClass: 'v-expansion-panel__container',\n      class: this.containerClasses,\n      attrs: {\n        tabindex: this.isReadonly || this.isDisabled ? null : 0\n      },\n      on: {\n        keydown: this.onKeydown\n      }\n    }, children)\n  }\n}\n"]}