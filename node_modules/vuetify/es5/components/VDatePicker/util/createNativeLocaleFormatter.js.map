{"version":3,"file":"createNativeLocaleFormatter.js","sourceRoot":"","sources":["../../../../src/components/VDatePicker/util/createNativeLocaleFormatter.js"],"names":[],"mappings":";;;;;;;;AAAA,AAAO,AAAG,AAAM,AAAO,AAEvB;;;;;;kBAAe,UAAC,AAAM,QAAE,AAAO,AAAE;mFAAoB,EAAE,AAAK,OAAE,AAAC,GAAE,AAAM,QAAE,AAAC,AAAE,AAAE,AAAE;QAA7C,AAAK;QAAE,AAAM,AAAE;;AAChD,QAAM,AAAa,gBAAG,AAAU,AAAC,AAAE;AACjC,AAAM,oCAAsB,AAAU,WAAC,AAAI,AAAE,OAAC,AAAK,MAAC,AAAG,AAAC,KAAC,AAAC,AAAC,GAAC,AAAK,MAAC,AAAG,AAAC;;YAA/D,AAAI;YAAE,AAAK;YAAE,AAAI,AAAC;;AACzB,eAAO,CAAC,AAAI,MAAE,AAAG,mBAAC,AAAK,SAAI,AAAC,AAAC,IAAE,AAAG,mBAAC,AAAI,QAAI,AAAC,AAAC,AAAC,IAAC,AAAI,KAAC,AAAG,AAAC,AAC1D;AAAC;AAED,QAAI;AACF,YAAM,AAAa,gBAAG,IAAI,AAAI,KAAC,AAAc,eAAC,AAAM,UAAI,AAAS,WAAE,AAAO,AAAC;AAC3E;AAAO,AAAU,AAAC,AAAE,mBAAC,AAAa,cAAC,AAAM,OAAC,IAAI,AAAI,AAAC,KAAG,AAAa,cAAC,AAAU,AAAC,AAAiB,AAAC,AAAC;;AACnG,MAAC,OAAO,AAAC,GAAE;AACV,eAAQ,AAAK,SAAI,AAAM,AAAC,AAAC,AAAC;AAAC,AAAU,AAAC,AAAE,mBAAC,AAAa,cAAC,AAAU,AAAC,YAAC,AAAM,OAAC,AAAK,OAAE,AAAM,AAAC,AAAC,AAAC;SAAnF,GAAoF,AAAI;AAChG,AACH;AAAC","sourcesContent":["import pad from './pad'\n\nexport default (locale, options, { start, length } = { start: 0, length: 0 }) => {\n  const makeIsoString = dateString => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\n    return [year, pad(month || 1), pad(date || 1)].join('-')\n  }\n\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\n    return dateString => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\n  } catch (e) {\n    return (start || length) ? dateString => makeIsoString(dateString).substr(start, length) : null\n  }\n}\n"]}