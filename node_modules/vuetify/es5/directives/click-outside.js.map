{"version":3,"file":"click-outside.js","sourceRoot":"","sources":["../../src/directives/click-outside.js"],"names":[],"mappings":"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","sourcesContent":["function closeConditional () {\n  return false\n}\n\nfunction directive (e, el, binding) {\n  // Args may not always be supplied\n  binding.args = binding.args || {}\n\n  // If no closeConditional was supplied assign a default\n  const isActive = (binding.args.closeConditional || closeConditional)\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (binding.args.include || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occure before\n  // the bubbling click event on any outside elements.\n  !clickedInEls(e, elements) && setTimeout(() => {\n    isActive(e) && binding.value(e)\n  }, 0)\n}\n\nfunction clickedInEls (e, elements) {\n  // Get position of click\n  const { clientX: x, clientY: y } = e\n  // Loop over all included elements to see if click was in any of them\n  for (const el of elements) {\n    if (clickedInEl(el, x, y)) return true\n  }\n\n  return false\n}\n\nfunction clickedInEl (el, x, y) {\n  // Get bounding rect for element\n  // (we're in capturing event and we want to check for multiple elements,\n  //  so can't use target.)\n  const b = el.getBoundingClientRect()\n  // Check if the click was in the element's bounding rect\n\n  return x >= b.left && x <= b.right && y >= b.top && y <= b.bottom\n}\n\nexport default {\n  name: 'click-outside',\n\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el, binding) {\n    const onClick = e => directive(e, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el) {\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  }\n}\n"]}